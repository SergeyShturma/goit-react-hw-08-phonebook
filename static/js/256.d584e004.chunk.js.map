{"version":3,"file":"static/js/256.d584e004.chunk.js","mappings":"kPACA,EAA4B,oCAA5B,EAAiF,yCAAjF,EAA2I,yCAA3I,EAAmM,uCAAnM,EAAgP,8B,6BCKnOA,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MAgCjB,OACE,kBAAMC,UAAWC,EAAaC,SA/BX,SAAAC,GACnBA,EAAEC,iBAEF,MAAkCD,EAAEE,OAAOC,SAAnCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SACfC,EAAO,CACXH,KAAMA,EAAKI,MACXH,MAAOA,EAAMG,MACbF,SAAUA,EAASE,OAGhBJ,EAAKI,MAKLH,EAAMG,MAKNF,EAASE,OAKdb,GAASc,EAAAA,EAAAA,IAASF,IAElBP,EAAEE,OAAOQ,UANPC,EAAAA,EAAAA,IAAM,wBALNA,EAAAA,EAAAA,IAAM,sBALNA,EAAAA,EAAAA,IAAM,kBAiBT,EAGC,WACE,kBAAOd,UAAWC,EAAlB,oBACA,kBACED,UAAWC,EACXc,KAAK,OACLR,KAAK,OACLS,YAAY,iBACZC,aAAa,QAEf,kBAAOjB,UAAWC,EAAlB,qBACA,kBACED,UAAWC,EACXc,KAAK,QACLR,KAAK,QACLS,YAAY,kBACZC,aAAa,QAEf,kBAAOjB,UAAWC,EAAlB,uBACA,kBACED,UAAWC,EACXc,KAAK,WACLR,KAAK,WACLS,YAAY,qBACZC,aAAa,QAEf,mBAAQjB,UAAWC,EAAgBc,KAAK,SAAxC,qBAGA,mBACEG,MAAM,MACNlB,UAAWC,EACXkB,IAAI,6CACJC,IAAI,SAEN,SAAC,KAAD,CAAgBC,UAAW,QAGhC,EAED,G","sources":["webpack://react-homework-template/./src/pages/RegistrationPage/RegistrationPage.module.css?b753","pages/RegistrationPage/RegistrationPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"RegistrationPage_loginForm__jILEe\",\"loginFormInput\":\"RegistrationPage_loginFormInput__wWdf0\",\"loginFormLabel\":\"RegistrationPage_loginFormLabel__+L-Wl\",\"loginFormBtn\":\"RegistrationPage_loginFormBtn__EF4Q6\",\"gif\":\"RegistrationPage_gif__his7B\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/user/operations';\nimport s from './RegistrationPage.module.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const RegistrationPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = e.target.elements;\n    const user = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n\n    if (!name.value) {\n      toast(`We need a name.`);\n      return;\n    }\n\n    if (!email.value) {\n      toast(`We need an email.`);\n      return;\n    }\n\n    if (!password.value) {\n      toast(`We need a password.`);\n      return;\n    }\n\n    dispatch(register(user));\n\n    e.target.reset();\n  };\n\n  return (\n    <form className={s.loginForm} onSubmit={handleSubmit}>\n      <label className={s.loginFormLabel}>Name </label>\n      <input\n        className={s.loginFormInput}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Type your name\"\n        autoComplete=\"on\"\n      />\n      <label className={s.loginFormLabel}>Email </label>\n      <input\n        className={s.loginFormInput}\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Type your email\"\n        autoComplete=\"on\"\n      />\n      <label className={s.loginFormLabel}>Password</label>\n      <input\n        className={s.loginFormInput}\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Type your password\"\n        autoComplete=\"on\"\n      />\n      <button className={s.loginFormBtn} type=\"submit\">\n        Submit\n      </button>\n      <iframe\n        title=\"Fun\"\n        className={s.gif}\n        src=\"https://giphy.com/embed/Ti7Yo6NnQn317jAUnc\"\n        alt=\"gif\"\n      ></iframe>\n      <ToastContainer autoClose={2000} />\n    </form>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegistrationPage","dispatch","useDispatch","className","s","onSubmit","e","preventDefault","target","elements","name","email","password","user","value","register","reset","toast","type","placeholder","autoComplete","title","src","alt","autoClose"],"sourceRoot":""}