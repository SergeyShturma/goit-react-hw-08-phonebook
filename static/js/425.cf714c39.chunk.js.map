{"version":3,"file":"static/js/425.cf714c39.chunk.js","mappings":"0OACA,EAA4B,6BAA5B,EAAqE,6BAArE,EAAmH,kCAAnH,EAAsK,kCAAtK,EAAuN,gCAAvN,EAA6P,uB,6BCKhPA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAyBjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAaC,SAzBb,SAAAC,GACnBA,EAAEC,iBAEF,MAA4BD,EAAEE,OAAOC,SAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACTC,EAAO,CACXF,MAAOA,EAAMG,MACbF,SAAUA,EAASE,OAGhBH,EAAMG,MAKNF,EAASE,OAKdZ,GAASa,EAAAA,EAAAA,IAAMF,IACfN,EAAEE,OAAOO,UALPC,EAAAA,EAAAA,IAAM,wBALNA,EAAAA,EAAAA,IAAM,oBAWT,EAIG,WACE,kBAAOb,UAAWC,EAAlB,qBACA,kBACED,UAAWC,EACXa,KAAK,QACLC,KAAK,QACLC,YAAY,kBACZC,aAAa,QAEf,kBAAOjB,UAAWC,EAAlB,uBACA,kBACED,UAAWC,EACXa,KAAK,WACLC,KAAK,WACLC,YAAY,qBACZC,aAAa,QAEf,mBAAQjB,UAAWC,EAAgBa,KAAK,SAAxC,qBAGA,mBACEI,MAAM,MACNlB,UAAWC,EACXkB,IAAI,6CACJC,IAAI,YAGR,SAAC,KAAD,CAAgBC,UAAW,QAGhC,EAED,G","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__ZK1ET\",\"loginForm\":\"LoginPage_loginForm__fRcAC\",\"loginFormInput\":\"LoginPage_loginFormInput__NjuPC\",\"loginFormLabel\":\"LoginPage_loginFormLabel__29iP-\",\"loginFormBtn\":\"LoginPage_loginFormBtn__Cz5Ol\",\"gif\":\"LoginPage_gif__WcA9B\"};","import { useDispatch } from 'react-redux';\nimport { login } from 'redux/user/operations';\nimport s from './LoginPage.module.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = e.target.elements;\n    const user = {\n      email: email.value,\n      password: password.value,\n    };\n\n    if (!email.value) {\n      toast(`We need an email.`);\n      return;\n    }\n\n    if (!password.value) {\n      toast(`We need a password.`);\n      return;\n    }\n\n    dispatch(login(user));\n    e.target.reset();\n  };\n\n  return (\n    <div className={s.container}>\n      <form className={s.loginForm} onSubmit={handleSubmit}>\n        <label className={s.loginFormLabel}>Email </label>\n        <input\n          className={s.loginFormInput}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Type your email\"\n          autoComplete=\"on\"\n        />\n        <label className={s.loginFormLabel}>Password</label>\n        <input\n          className={s.loginFormInput}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Type your password\"\n          autoComplete=\"on\"\n        />\n        <button className={s.loginFormBtn} type=\"submit\">\n          Submit\n        </button>\n        <iframe\n          title=\"Fun\"\n          className={s.gif}\n          src=\"https://giphy.com/embed/eHRJnn8lMfskRFCyii\"\n          alt=\"gif\"\n        ></iframe>\n      </form>\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginPage","dispatch","useDispatch","className","s","onSubmit","e","preventDefault","target","elements","email","password","user","value","login","reset","toast","type","name","placeholder","autoComplete","title","src","alt","autoClose"],"sourceRoot":""}